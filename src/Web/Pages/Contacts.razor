@page "/contacts"
@using Web.Services
@using ApplicationCore.Entitites
@inject IModalService Modal
@inject ContactService ServiceContact

<h2>Contacts</h2>

<div class="container">
    <div class="row">
        <div class="col-xs-3">
            <Button type="button" class="btn btn-primary btn-sm text-center" @onclick="AddContact_Click">
                <i class="fa fa-plus"></i>
             Add
            </Button>
        </div>
        <div class="input-group col-md-4 offset-md-5">
            <input type="text" class="form-control" placeholder="Search Contact" @bind="searchString" />           
            <div class="input-group-append">
                <Button type="button" style="margin-left: 5px" class="btn btn-primary btn-sm text-center" @onclick="SearchContact_Click">
                    <i class="fa fa-search"></i>
                    Search
                </Button>
            </div>
        </div>
    </div>
</div>
<br />

@if (contacts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class='table table-hover table-sm'>
        <thead>
            <tr>
                <th>Firstname</th>
                <th>Lastname</th>
                <th>Mobile No.</th>
                <th>Email Address</th>
                <th>Address</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in contacts)
            {
                <tr>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.MobileNo</td>
                    <td>@item.EmailAddress</td>
                    <td>@item.Address</td>
                    <td>
                        <button type="button" class="btn btn-outline-dark btn-sm text-center"
                                @onclick="(() => EditContact_Click(item.Id))">
                                <i class="fa fa-pencil-square-o"></i>
                        </button>
                        <button type="button" class="btn btn-outline-danger btn-sm text-center"
                                @onclick="(() => DeleteContact_Click(item.Id))">
                                <i class="fa fa-trash-o"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    protected IEnumerable<Contact> contacts;
    protected Contact contact = new Contact();
    protected string searchString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    protected async Task Load()
    {
        contacts = await ServiceContact.GetContactsAsync();
    }

    protected void AddContact_Click()
    {
        contact = new Contact();
        var parameters = new ModalParameters();
        parameters.Add("Contact", contact);

        Modal.OnClose += ModalClosed;
        Modal.Show("Add Contact", typeof(UpdateForm), parameters);
    }

    protected async void EditContact_Click(int id)
    {
        contact = await ServiceContact.GetContactByIdAsync(id);

        var parameters = new ModalParameters();
        parameters.Add("Contact", contact);
        Modal.OnClose += ModalClosed;
        Modal.Show("Edit Contact", typeof(UpdateForm), parameters);
    }

    protected async void DeleteContact_Click(int id)
    {
        contact = await ServiceContact.GetContactByIdAsync(id);

        var parameters = new ModalParameters();
        parameters.Add("Contact", contact);

        Modal.OnClose += ModalClosed;
        Modal.Show("Delete Contact", typeof(DeleteForm), parameters);
    }

    async void ModalClosed(ModalResult modalResult)
    {
        await Load();
        this.StateHasChanged();
        Modal.OnClose -= ModalClosed;
    }

    protected async Task SearchContact_Click()
    {
        if (String.IsNullOrEmpty(searchString) == false)
        {
            contacts = contacts.Where(c =>
                         c.FirstName.Contains(searchString) ||
                         c.LastName.Contains(searchString) ||
                         c.MobileNo.Contains(searchString) ||
                         c.EmailAddress.Contains(searchString) ||
                         c.Address.Contains(searchString));
        }
        else
        {
            await Load();
        }
    }
}
