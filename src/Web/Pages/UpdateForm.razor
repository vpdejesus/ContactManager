@inject IModalService ModalService
@inject ContactService ServiceContact

<div class="container">
    <form>
        <div class="form-group col-md-12">
            <label for="first-name">First Name</label>
            <input @bind="Contact.FirstName" type="text" class="form-control" id="first-name" placeholder="Enter First Name" />
        </div>

        <div class="form-group col-md-12">
            <label for="last-name">Last Name</label>
            <input @bind="Contact.LastName" type="text" class="form-control" id="last-name" placeholder="Enter Last Name" />
        </div>

        <div class="form-group col-md-12">
            <label for="mobile-no">Mobile No.</label>
            <input @bind="Contact.MobileNo" type="text" class="form-control" id="mobile-no" placeholder="Enter Mobile No." />
        </div>

        <div class="form-group col-md-12">
            <label for="email-address">Email Address</label>
            <input @bind="Contact.EmailAddress" type="text" class="form-control" id="email-address" placeholder="Enter Email Address" />
        </div>

        <div class="form-group col-md-12">
            <label for="address">Address</label>
            <input @bind="Contact.Address" type="text" class="form-control" id="address" placeholder="Enter Address" />
        </div>

        <button @onclick="Save" class="btn btn-primary">Save</button>
        <button @onclick="Modal.Cancel" class="btn btn-secondary">Cancel</button>
    </form>
</div>

@code {

    Contact Contact { get; set; }
    [Parameter] 
    public int Id { get; set; }
    [CascadingParameter]
    BlazoredModalInstance Modal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Contact = new Contact();

        if (Id != 0)
        {
            Contact = await ServiceContact.GetContactByIdAsync(Id);
        }
    }

    private async Task Save()
    {
        if (Contact.Id != 0)
        {
            await ServiceContact.UpdateContactAsync(Contact.Id, Contact);
        }
        else
        {
            await ServiceContact.InsertContactAsync(Contact);
        }

        Modal.Close(ModalResult.Ok(Contact));
    }
}
