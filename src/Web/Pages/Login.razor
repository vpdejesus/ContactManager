@page "/login"
@inject AccountService AuthService
@inject NavigationManager NavigationManager

<div class="container col-6">
    @if (ShowErrors)
    {
        <div class="alert alert-danger" role="alert">
            <p>@Error</p>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Login</h5>
            <EditForm @ref="loginform" Model="loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="form-group">
                    <label for="email">Email address</label>
                    <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>
                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </EditForm>
        </div>
    </div>
</div>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private string Error = "";
    EditForm loginform { get; set; }

    private async Task HandleLogin()
    {
        ShowErrors = false;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Error = result.Error;
            ShowErrors = true;
        }
    }
}
