@page "/editcontact/{Id}"

<RadzenContent Container="main">
    <ChildContent>
        <div style="" class="row">
            <div class="col-md-9">
                <RadzenLabel style="font-weight: bold" Text="Item no longer available." Visible="@(!CanEdit)">
                </RadzenLabel>
            </div>
            <div class="col-md-3">
                <RadzenButton ButtonStyle="ButtonStyle.Secondary" style="margin-bottom: 20px" Text="Close" Visible="@(!CanEdit)" Click="@Close_Click">
                </RadzenButton>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <RadzenTemplateForm Data="@(Contact)" TItem="Contact" Visible="@(Contact != null && CanEdit)" Submit="@Form_Submit">
                    <ChildContent>
                        <div style="margin-bottom: 1rem" class="row">
                            <div class="col-md-3">
                                <RadzenLabel Text="First Name" Component="FirstName" style="width: 100%">
                                </RadzenLabel>
                            </div>
                            <div class="col-md-9">
                                <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@((Contact.FirstName))" Name="FirstName">
                                </RadzenTextBox>
                            </div>
                        </div>
                        <div style="margin-bottom: 1rem" class="row">
                            <div class="col-md-3">
                                <RadzenLabel Text="Last Name" Component="LastName" style="width: 100%">
                                </RadzenLabel>
                            </div>
                            <div class="col-md-9">
                                <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@((Contact.LastName))" Name="LastName">
                                </RadzenTextBox>
                            </div>
                        </div>
                        <div style="margin-bottom: 1rem" class="row">
                            <div class="col-md-3">
                                <RadzenLabel Text="Mobile No." Component="Mobile No." style="width: 100%">
                                </RadzenLabel>
                            </div>
                            <div class="col-md-9">
                                <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@((Contact.MobileNo))" Name="MobileNo">
                                </RadzenTextBox>
                            </div>
                        </div>
                        <div style="margin-bottom: 1rem" class="row">
                            <div class="col-md-3">
                                <RadzenLabel Text="Email" Component="EmailAddress" style="width: 100%">
                                </RadzenLabel>
                            </div>
                            <div class="col-md-9">
                                <RadzenTextBox MaxLength="256" style="display: block; width: 100%" @bind-Value="@((Contact.EmailAddress))" Name="EmailAddress">
                                </RadzenTextBox>
                                <RadzenRequiredValidator Component="EmailAddress" Text="Email is required" style="position: absolute">
                                </RadzenRequiredValidator>
                            </div>
                        </div>
                        <div style="margin-bottom: 1rem" class="row">
                            <div class="col-md-3">
                                <RadzenLabel Text="Address" Component="Address" style="width: 100%">
                                </RadzenLabel>
                            </div>
                            <div class="col-md-9">
                                <RadzenTextBox MaxLength="256" style="width: 100%" @bind-Value="@((Contact.Address))" Name="Address">
                                </RadzenTextBox>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col offset-sm-3">
                                <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" ButtonStyle="ButtonStyle.Primary">
                                </RadzenButton>
                                <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Click="@Cancel_Click">
                                </RadzenButton>
                            </div>
                        </div>
                    </ChildContent>
                </RadzenTemplateForm>
            </div>
        </div>
    </ChildContent>
</RadzenContent>

@code {
    [Parameter]
    public dynamic Id { get; set; }
    [Inject]
    private ContactService ContactService { get; set; }
    [Inject]
    private DialogService DialogService { get; set; }
    [Inject]
    private NotificationService NotificationService { get; set; }

    bool _canEdit;

    private bool CanEdit
    {
        get => _canEdit;
        set
        {
            if (_canEdit != value)
            {
                _canEdit = value;
                InvokeAsync(StateHasChanged);
            }
        }
    }

    Contact _contact;

    private Contact Contact
    {
        get => _contact;
        set
        {
            if (_contact != value)
            {
                _contact = value;
                InvokeAsync(StateHasChanged);
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        CanEdit = true;
        Contact = await ContactService.GetContactByIdAsync(int.Parse($"{Id}"));
    }

    private void Close_Click(MouseEventArgs args)
    {
        DialogService.Close(null);
    }

    private async void Form_Submit()
    {
        try
        {
            await ContactService.UpdateContactAsync(int.Parse($"{Id}"), Contact);
            DialogService.Close(Contact);
        }
        catch (Exception ex)
        {
            NotificationService.Notify(NotificationSeverity.Error, $"Error", ex.Message);
        }
    }

    private void Cancel_Click(MouseEventArgs args)
    {
        DialogService.Close(null);
    }

}
